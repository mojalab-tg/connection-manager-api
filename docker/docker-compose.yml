version: "3.7"

services:
  connection-manager-db:
    image: mariadb
    hostname: connection-manager-db
    ports:
      - 3306:3306
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=mcm
      - MYSQL_USER=mcm
      - MYSQL_PASSWORD=mcm
    restart: always

  connection-manager-api:
    build:
      context: ../
      dockerfile: Dockerfile
    image: connection-manager-api
    hostname: connection-manager-api
    environment:
      - DATABASE_HOST=connection-manager-db
      - DATABASE_PORT=3306
      - DATABASE_USER=mcm
      - DATABASE_PASSWORD=mcm
      - DATABASE_SCHEMA=mcm
      - PORT=3001
      - P12_PASS_PHRASE='SOME_S3C4R3_P@SS'
      - VAULT_AUTH_METHOD=APP_ROLE
      - VAULT_ROLE_ID_FILE=./docker/vault/tmp/role-id
      - VAULT_ROLE_SECRET_ID_FILE=./docker/vault/tmp/secret-id
      - SWITCH_ID=modus123
      - VAULT_PKI_CLIENT_ROLE=example.com
      - VAULT_PKI_SERVER_ROLE=example.com
      - VAULT_ADDR=http://vault-dev:8233
    tty: true
    stdin_open: true  
    ports:
      - "3001:3001"
    restart: always
    depends_on:
      - connection-manager-db
      - vault-dev

  connection-manager-ui:
    build:
      context: ../../connection-manager-ui
      dockerfile: Dockerfile
      args:
        - AUTH_ENABLED=FALSE
        - REACT_APP_COMMIT=${REACT_APP_COMMIT:-unknown}
        - REACT_APP_VERSION=${REACT_APP_VERSION:-unknown}
    hostname: connection-manager-ui
    environment:
      - API_BASE_URL=http://localhost:3001
    tty: true
    stdin_open: true  
    ports:
      - "80:8080"
    restart: always

  vault-dev:
    image: vault:1.13.3
    restart: always
    environment:
      VAULT_DEV_LISTEN_ADDRESS: 0.0.0.0:8233
      VAULT_ADDR: http://127.0.0.1:8233
      VAULT_API_ADDR: http://127.0.0.1:8233
      VAULT_DEV_ROOT_TOKEN_ID: "myroot"
      VAULT_LOCAL_CONFIG: '{"backend": {"file": {"path": "/vault/file"}}, "default_lease_ttl": "168h", "max_lease_ttl": "720h"}'
    ports:
      - "8233:8233"
    volumes:
      - ./vault/tmp:/vault/tmp
      - ./vault/docker-entrypoint.sh:/usr/local/bin/docker-entrypoint.sh
    cap_add:
      - IPC_LOCK
    # entrypoint: ["/bin/sh", "-c", "chmod +x /vault/docker-entrypoint.sh && exec /vault/docker-entrypoint.sh"]
    healthcheck:
      test: ["CMD-SHELL", "test -f /tmp/service_started"]
      timeout: 1s
      retries: 20

networks:
  default:
    driver: bridge